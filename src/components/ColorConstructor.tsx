import React, { useState } from 'react';
import { Palette, RotateCcw, Share2, Info } from 'lucide-react';

interface ColorOption {
  name: string;
  hex: string;
  description: string;
}

export default function ColorConstructor() {
  // –ü–∞–ª—ñ—Ç—Ä–∞ –∫–æ–ª—å–æ—Ä—ñ–≤ MIVA (20 –∫–æ–ª—å–æ—Ä—ñ–≤)
  const colors: ColorOption[] = [
    { name: '–ú–æ–ª–æ—á–Ω–∏–π', hex: '#F5F3EA', description: '–ù—ñ–∂–Ω–∏–π –º–æ–ª–æ—á–Ω–∏–π –≤—ñ–¥—Ç—ñ–Ω–æ–∫' },
    { name: '–ö–∞–ø—É—á–∏–Ω–æ', hex: '#C9B39C', description: '–¢–µ–ø–ª–∏–π –∫–∞–≤–æ–≤–∏–π —Ç–æ–Ω' },
    { name: '–ë–µ–∂–µ–≤–∏–π', hex: '#E8D5C4', description: '–ö–ª–∞—Å–∏—á–Ω–∏–π –±–µ–∂–µ–≤–∏–π' },
    { name: '–ö–∞—Ä–∞–º–µ–ª—å', hex: '#D4A574', description: '–°–æ–ª–æ–¥–∫–∏–π –∫–∞—Ä–∞–º–µ–ª—å–Ω–∏–π' },
    { name: '–ì—Ä–∞—Ñ—ñ—Ç', hex: '#4A4A4A', description: '–ï–ª–µ–≥–∞–Ω—Ç–Ω–∏–π —Å—ñ—Ä–∏–π' },
    { name: '–°–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π', hex: '#B8B8B8', description: '–ú\'—è–∫–∏–π —Å—ñ—Ä–∏–π —Ç–æ–Ω' },
    { name: '–ë—ñ–ª–∏–π', hex: '#FFFFFF', description: '–ß–∏—Å—Ç–∏–π –±—ñ–ª–∏–π' },
    { name: '–ß–æ—Ä–Ω–∏–π', hex: '#2C2C2C', description: '–ì–ª–∏–±–æ–∫–∏–π —á–æ—Ä–Ω–∏–π' },
    { name: '–ù—ñ–∂–Ω–æ-—Ä–æ–∂–µ–≤–∏–π', hex: '#F4C2C2', description: '–†–æ–º–∞–Ω—Ç–∏—á–Ω–∏–π —Ä–æ–∂–µ–≤–∏–π' },
    { name: '–°–∞–ª–∞—Ç–æ–≤–∏–π', hex: '#A8D5A8', description: '–°–≤—ñ–∂–∏–π –∑–µ–ª–µ–Ω–∏–π' },
    { name: '–ë–ª–∞–∫–∏—Ç–Ω–∏–π', hex: '#A8C8E1', description: '–°–ø–æ–∫—ñ–π–Ω–∏–π –±–ª–∞–∫–∏—Ç–Ω–∏–π' },
    { name: '–õ–∞–≤–∞–Ω–¥–æ–≤–∏–π', hex: '#C8A8E1', description: '–ù—ñ–∂–Ω–∏–π —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–π' },
    { name: '–ü–µ—Ä—Å–∏–∫–æ–≤–∏–π', hex: '#F5C99B', description: '–¢–µ–ø–ª–∏–π –ø–µ—Ä—Å–∏–∫–æ–≤–∏–π' },
    { name: '–ú—è—Ç–Ω–∏–π', hex: '#B8E6D3', description: '–û—Å–≤—ñ–∂–∞—é—á–∏–π –º\'—è—Ç–Ω–∏–π' },
    { name: '–ü—É–¥—Ä–æ–≤–∏–π', hex: '#E8C5D1', description: '–í–∏—Ç–æ–Ω—á–µ–Ω–∏–π –ø—É–¥—Ä–æ–≤–∏–π' },
    { name: '–ó–æ–ª–æ—Ç–∏—Å—Ç–∏–π', hex: '#D4AF37', description: '–†–æ–∑–∫—ñ—à–Ω–∏–π –∑–æ–ª–æ—Ç–∏–π' },
    { name: '–¢–µ—Ä—Ä–∞–∫–æ—Ç–∞', hex: '#C65D07', description: '–ó–µ–º–ª—è–Ω–∏–π —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–∏–π' },
    { name: '–Ü–Ω–¥–∏–≥–æ', hex: '#4B0082', description: '–ì–ª–∏–±–æ–∫–∏–π —ñ–Ω–¥–∏–≥–æ' },
    { name: '–û–ª–∏–≤–∞', hex: '#8B8000', description: '–ü—Ä–∏—Ä–æ–¥–Ω–∏–π –æ–ª–∏–≤–∫–æ–≤–∏–π' },
    { name: '–ë–æ—Ä–¥–æ', hex: '#800020', description: '–ë–ª–∞–≥–æ—Ä–æ–¥–Ω–∏–π –±–æ—Ä–¥–æ–≤–∏–π' }
  ];

  // –°—Ç–∞–Ω–∏ –¥–ª—è –≤–∏–±—Ä–∞–Ω–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤ (–ø–æ—á–∞—Ç–∫–æ–≤—ñ –∫–æ–ª—å–æ—Ä–∏ —è–∫ –Ω–∞ —Ñ–æ—Ç–æ)
  const [selectedColors, setSelectedColors] = useState({
    sheet: '#E8D5C4',        // –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ - –±–µ–∂–µ–≤–∏–π —è–∫ –Ω–∞ —Ñ–æ—Ç–æ
    blanket: '#7FB069',      // –ö–æ–≤–¥—Ä–∞ - –∑–µ–ª–µ–Ω–∏–π —è–∫ –Ω–∞ —Ñ–æ—Ç–æ
    pillowLeft: '#7FB069',   // –õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞ - –∑–µ–ª–µ–Ω–∏–π —è–∫ –Ω–∞ —Ñ–æ—Ç–æ
    pillowRight: '#7FB069'   // –ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞ - –∑–µ–ª–µ–Ω–∏–π —è–∫ –Ω–∞ —Ñ–æ—Ç–æ
  });

  const [showInfo, setShowInfo] = useState(false);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –∫–æ–ª—å–æ—Ä—É –µ–ª–µ–º–µ–Ω—Ç–∞
  const handleColorChange = (element: keyof typeof selectedColors, color: string) => {
    setSelectedColors(prev => ({
      ...prev,
      [element]: color
    }));
  };

  // –°–∫–∏–¥–∞–Ω–Ω—è –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤ (—è–∫ –Ω–∞ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–º—É —Ñ–æ—Ç–æ)
  const resetColors = () => {
    setSelectedColors({
      sheet: '#E8D5C4',
      blanket: '#7FB069',
      pillowLeft: '#7FB069',
      pillowRight: '#7FB069'
    });
  };

  // –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—î—é –≤ Instagram
  const shareToInstagram = () => {
    const selectedColorNames = {
      sheet: colors.find(c => c.hex === selectedColors.sheet)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π',
      blanket: colors.find(c => c.hex === selectedColors.blanket)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π',
      pillowLeft: colors.find(c => c.hex === selectedColors.pillowLeft)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π',
      pillowRight: colors.find(c => c.hex === selectedColors.pillowRight)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π'
    };

    const message = `–ú–æ—è –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è –∫–æ–ª—å–æ—Ä—ñ–≤ MIVA:
üõèÔ∏è –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ: ${selectedColorNames.sheet}
üõå –ö–æ–≤–¥—Ä–∞: ${selectedColorNames.blanket}
üõèÔ∏è –ü–æ–¥—É—à–∫–∏: ${selectedColorNames.pillowLeft}${selectedColorNames.pillowLeft !== selectedColorNames.pillowRight ? ` —Ç–∞ ${selectedColorNames.pillowRight}` : ''}

–î–æ–ø–æ–º–æ–∂—ñ—Ç—å –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! üíô`;

    const instagramUrl = `https://www.instagram.com/miva_ua/`;
    window.open(instagramUrl, '_blank');
    
    // –ö–æ–ø—ñ—é—î–º–æ —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
    navigator.clipboard.writeText(message).catch(() => {
      console.log('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç');
    });
  };

  // –ì–æ—Ç–æ–≤—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó
  const presetCombinations = [
    {
      name: '–ö–ª–∞—Å–∏—á–Ω–∞',
      colors: { sheet: '#F5F3EA', blanket: '#C9B39C', pillowLeft: '#E8D5C4', pillowRight: '#E8D5C4' }
    },
    {
      name: '–ú—ñ–Ω—ñ–º–∞–ª—ñ–∑–º',
      colors: { sheet: '#FFFFFF', blanket: '#B8B8B8', pillowLeft: '#4A4A4A', pillowRight: '#4A4A4A' }
    },
    {
      name: '–†–æ–º–∞–Ω—Ç–∏—á–Ω–∞',
      colors: { sheet: '#F4C2C2', blanket: '#E8C5D1', pillowLeft: '#F4C2C2', pillowRight: '#E8C5D1' }
    },
    {
      name: '–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞',
      colors: { sheet: '#E8D5C4', blanket: '#7FB069', pillowLeft: '#7FB069', pillowRight: '#7FB069' }
    }
  ];

  return (
    <section id="constructor" className="py-24 bg-gradient-to-br from-[#fff7ed] to-[#fdf2e9]">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-semibold text-brandBrown mb-4 text-shadow-sm">
            –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π
          </h2>
          <p className="text-lg text-graphite max-w-2xl mx-auto mb-6">
            –ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–π—Ç–µ –∑ –∫–æ–ª—å–æ—Ä–∞–º–∏ —Ç–∞ —Å—Ç–≤–æ—Ä—é–π—Ç–µ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –¥–ª—è –≤–∞—à–æ—ó –ø–æ—Å—Ç—ñ–ª—å–Ω–æ—ó –±—ñ–ª–∏–∑–Ω–∏
          </p>
          <button
            onClick={() => setShowInfo(!showInfo)}
            className="inline-flex items-center gap-2 text-brandBrown hover:text-gold transition-colors"
          >
            <Info size={16} />
            <span className="text-sm">–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º</span>
          </button>
        </div>

        {/* –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó (–ø–æ–∫–∞–∑—É—é—Ç—å—Å—è –ø—Ä–∏ –∫–ª—ñ–∫—É) */}
        {showInfo && (
          <div className="max-w-4xl mx-auto mb-12 bg-white rounded-xl shadow-lg p-6 border-l-4 border-brandBrown">
            <h3 className="text-xl font-semibold text-brandBrown mb-4 text-center">
              –Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
            </h3>
            <div className="grid md:grid-cols-3 gap-6 text-center">
              <div>
                <div className="w-12 h-12 bg-brandBrown text-cream rounded-full flex items-center justify-center mx-auto mb-3 font-bold text-lg">
                  1
                </div>
                <h4 className="font-medium text-graphite mb-2">–û–±–µ—Ä—ñ—Ç—å –∫–æ–ª—å–æ—Ä–∏</h4>
                <p className="text-sm text-gray-600">
                  –ù–∞—Ç–∏—Å–∫–∞–π—Ç–µ –Ω–∞ –∫–æ–ª—å–æ—Ä–æ–≤—ñ –∫—Ä—É–∂–µ—á–∫–∏, —â–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –∫–æ–ª—ñ—Ä –∫–æ–∂–Ω–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –ø–æ—Å—Ç–µ–ª—ñ
                </p>
              </div>
              <div>
                <div className="w-12 h-12 bg-brandBrown text-cream rounded-full flex items-center justify-center mx-auto mb-3 font-bold text-lg">
                  2
                </div>
                <h4 className="font-medium text-graphite mb-2">–ü–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h4>
                <p className="text-sm text-gray-600">
                  –ë–∞—á–∏—Ç–µ –∑–º—ñ–Ω–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –ª—ñ–∂–∫–∞ –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —Ç–µ–∫—Å—Ç—É—Ä–∏
                </p>
              </div>
              <div>
                <div className="w-12 h-12 bg-brandBrown text-cream rounded-full flex items-center justify-center mx-auto mb-3 font-bold text-lg">
                  3
                </div>
                <h4 className="font-medium text-graphite mb-2">–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—î—é</h4>
                <p className="text-sm text-gray-600">
                  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è" —Ç–∞ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –≤ Instagram –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </p>
              </div>
            </div>
          </div>
        )}

        <div className="max-w-7xl mx-auto">
          <div className="grid lg:grid-cols-2 gap-8 items-start">
            {/* –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –ª—ñ–∂–∫–∞ */}
            <div className="bg-white rounded-2xl shadow-2xl p-6">
              <div className="relative w-full max-w-lg mx-auto group" style={{ aspectRatio: '4/3' }}>
                {/* –ë–∞–∑–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ–∂–∫–∞ */}
                <img 
                  src="/photo_2025-06-10_19-09-52.jpg" 
                  alt="–ë–∞–∑–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ–∂–∫–∞"
                  className="w-full h-full object-cover rounded-lg"
                  style={{ position: 'absolute', top: 0, left: 0, zIndex: 0 }}
                />
                
                {/* PNG-–º–∞—Å–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∑–æ–Ω–∏ –∑ mix-blend-mode */}
                
                {/* –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ - –Ω–∏–∂–Ω—è —á–∞—Å—Ç–∏–Ω–∞ –ª—ñ–∂–∫–∞ */}
                <div
                  className="absolute inset-0 rounded-lg transition-all duration-300"
                  style={{
                    backgroundColor: selectedColors.sheet,
                    mixBlendMode: 'multiply',
                    zIndex: 1,
                    clipPath: 'polygon(0% 65%, 100% 65%, 100% 100%, 0% 100%)',
                    opacity: 0.8
                  }}
                />
                
                {/* –ö–æ–≤–¥—Ä–∞ - –æ—Å–Ω–æ–≤–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ */}
                <div
                  className="absolute inset-0 rounded-lg transition-all duration-300"
                  style={{
                    backgroundColor: selectedColors.blanket,
                    mixBlendMode: 'multiply',
                    zIndex: 2,
                    clipPath: 'polygon(5% 40%, 95% 40%, 90% 80%, 10% 80%)',
                    opacity: 0.85
                  }}
                />
                
                {/* –õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞ */}
                <div
                  className="absolute inset-0 rounded-lg transition-all duration-300"
                  style={{
                    backgroundColor: selectedColors.pillowLeft,
                    mixBlendMode: 'multiply',
                    zIndex: 3,
                    clipPath: 'polygon(8% 18%, 45% 18%, 42% 48%, 12% 48%)',
                    opacity: 0.85
                  }}
                />
                
                {/* –ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞ */}
                <div
                  className="absolute inset-0 rounded-lg transition-all duration-300"
                  style={{
                    backgroundColor: selectedColors.pillowRight,
                    mixBlendMode: 'multiply',
                    zIndex: 4,
                    clipPath: 'polygon(55% 18%, 92% 18%, 88% 48%, 58% 48%)',
                    opacity: 0.85
                  }}
                />

                {/* –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –ø—ñ–¥–ø–∏—Å–∏ –∑–æ–Ω */}
                <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none">
                  <div className="absolute top-2 left-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded">
                    –õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞
                  </div>
                  <div className="absolute top-2 right-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded">
                    –ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞
                  </div>
                  <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded">
                    –ö–æ–≤–¥—Ä–∞
                  </div>
                  <div className="absolute bottom-2 left-1/2 transform -translate-x-1/2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded">
                    –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ
                  </div>
                </div>
              </div>

              {/* –ü–æ—Ç–æ—á–Ω–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è */}
              <div className="mt-6 p-4 bg-gradient-to-r from-gray-50 to-gray-100 rounded-lg">
                <h4 className="text-sm font-medium text-graphite mb-3 text-center">–ü–æ—Ç–æ—á–Ω–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è:</h4>
                <div className="grid grid-cols-2 gap-3 text-xs">
                  <div className="flex items-center gap-2 bg-white p-2 rounded">
                    <div className="w-4 h-4 rounded border border-gray-300" style={{ backgroundColor: selectedColors.sheet }} />
                    <span className="font-medium">–ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ:</span>
                    <span className="text-brandBrown">{colors.find(c => c.hex === selectedColors.sheet)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π'}</span>
                  </div>
                  <div className="flex items-center gap-2 bg-white p-2 rounded">
                    <div className="w-4 h-4 rounded border border-gray-300" style={{ backgroundColor: selectedColors.blanket }} />
                    <span className="font-medium">–ö–æ–≤–¥—Ä–∞:</span>
                    <span className="text-brandBrown">{colors.find(c => c.hex === selectedColors.blanket)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π'}</span>
                  </div>
                  <div className="flex items-center gap-2 bg-white p-2 rounded">
                    <div className="w-4 h-4 rounded border border-gray-300" style={{ backgroundColor: selectedColors.pillowLeft }} />
                    <span className="font-medium">–õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞:</span>
                    <span className="text-brandBrown">{colors.find(c => c.hex === selectedColors.pillowLeft)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π'}</span>
                  </div>
                  <div className="flex items-center gap-2 bg-white p-2 rounded">
                    <div className="w-4 h-4 rounded border border-gray-300" style={{ backgroundColor: selectedColors.pillowRight }} />
                    <span className="font-medium">–ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞:</span>
                    <span className="text-brandBrown">{colors.find(c => c.hex === selectedColors.pillowRight)?.name || '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π'}</span>
                  </div>
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
              <div className="flex justify-center gap-4 mt-6">
                <button
                  onClick={resetColors}
                  className="flex items-center gap-2 px-4 py-2 bg-gray-100 hover:bg-gray-200 text-graphite rounded-lg transition-colors duration-200"
                >
                  <RotateCcw size={16} />
                  <span>–°–∫–∏–Ω—É—Ç–∏</span>
                </button>
                <button
                  onClick={shareToInstagram}
                  className="flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-brandBrown to-brandBrown hover:to-gold text-cream rounded-lg transition-all duration-300 shadow-md hover:shadow-lg"
                >
                  <Share2 size={16} />
                  <span>–ó–∞–º–æ–≤–∏—Ç–∏</span>
                </button>
              </div>
            </div>

            {/* –°–µ–ª–µ–∫—Ç–æ—Ä–∏ –∫–æ–ª—å–æ—Ä—ñ–≤ */}
            <div className="space-y-6">
              {/* –ì–æ—Ç–æ–≤—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó */}
              <div className="bg-gradient-to-r from-cream to-beige rounded-xl shadow-lg p-6">
                <h3 className="text-lg font-semibold text-brandBrown mb-4 flex items-center gap-2">
                  <Palette size={20} />
                  –ì–æ—Ç–æ–≤—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó
                </h3>
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                  {presetCombinations.map((combo, index) => (
                    <button
                      key={index}
                      onClick={() => setSelectedColors(combo.colors)}
                      className="p-3 bg-white rounded-lg hover:shadow-md transition-shadow duration-200 text-left group"
                    >
                      <div className="flex gap-2 mb-2">
                        <div className="w-4 h-4 rounded border border-gray-200" style={{ backgroundColor: combo.colors.sheet }} />
                        <div className="w-4 h-4 rounded border border-gray-200" style={{ backgroundColor: combo.colors.blanket }} />
                        <div className="w-4 h-4 rounded border border-gray-200" style={{ backgroundColor: combo.colors.pillowLeft }} />
                        {combo.colors.pillowLeft !== combo.colors.pillowRight && (
                          <div className="w-4 h-4 rounded border border-gray-200" style={{ backgroundColor: combo.colors.pillowRight }} />
                        )}
                      </div>
                      <span className="text-sm font-medium text-graphite group-hover:text-brandBrown transition-colors">
                        {combo.name}
                      </span>
                    </button>
                  ))}
                </div>
              </div>

              {/* –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ */}
              <div className="bg-white rounded-xl shadow-lg p-6">
                <h3 className="text-lg font-semibold text-brandBrown mb-4 flex items-center gap-2">
                  <div 
                    className="w-4 h-4 rounded border border-gray-300"
                    style={{ backgroundColor: selectedColors.sheet }}
                  />
                  –ü—Ä–æ—Å—Ç–∏—Ä–∞–¥–ª–æ
                </h3>
                <div className="grid grid-cols-5 sm:grid-cols-6 md:grid-cols-8 lg:grid-cols-10 gap-2">
                  {colors.map((color) => (
                    <button
                      key={`sheet-${color.hex}`}
                      onClick={() => handleColorChange('sheet', color.hex)}
                      className={`w-8 h-8 rounded-full border-2 transition-all duration-200 hover:scale-110 ${
                        selectedColors.sheet === color.hex 
                          ? 'border-brandBrown ring-2 ring-brandBrown ring-opacity-50 scale-110' 
                          : 'border-gray-300 hover:border-brandBrown'
                      }`}
                      style={{ backgroundColor: color.hex }}
                      title={color.name}
                    />
                  ))}
                </div>
              </div>

              {/* –ö–æ–≤–¥—Ä–∞ */}
              <div className="bg-white rounded-xl shadow-lg p-6">
                <h3 className="text-lg font-semibold text-brandBrown mb-4 flex items-center gap-2">
                  <div 
                    className="w-4 h-4 rounded border border-gray-300"
                    style={{ backgroundColor: selectedColors.blanket }}
                  />
                  –ö–æ–≤–¥—Ä–∞
                </h3>
                <div className="grid grid-cols-5 sm:grid-cols-6 md:grid-cols-8 lg:grid-cols-10 gap-2">
                  {colors.map((color) => (
                    <button
                      key={`blanket-${color.hex}`}
                      onClick={() => handleColorChange('blanket', color.hex)}
                      className={`w-8 h-8 rounded-full border-2 transition-all duration-200 hover:scale-110 ${
                        selectedColors.blanket === color.hex 
                          ? 'border-brandBrown ring-2 ring-brandBrown ring-opacity-50 scale-110' 
                          : 'border-gray-300 hover:border-brandBrown'
                      }`}
                      style={{ backgroundColor: color.hex }}
                      title={color.name}
                    />
                  ))}
                </div>
              </div>

              {/* –ü–æ–¥—É—à–∫–∏ */}
              <div className="grid sm:grid-cols-2 gap-4">
                {/* –õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞ */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                  <h3 className="text-lg font-semibold text-brandBrown mb-4 flex items-center gap-2">
                    <div 
                      className="w-4 h-4 rounded border border-gray-300"
                      style={{ backgroundColor: selectedColors.pillowLeft }}
                    />
                    –õ—ñ–≤–∞ –ø–æ–¥—É—à–∫–∞
                  </h3>
                  <div className="grid grid-cols-4 sm:grid-cols-5 gap-2">
                    {colors.map((color) => (
                      <button
                        key={`pillow-left-${color.hex}`}
                        onClick={() => handleColorChange('pillowLeft', color.hex)}
                        className={`w-8 h-8 rounded-full border-2 transition-all duration-200 hover:scale-110 ${
                          selectedColors.pillowLeft === color.hex 
                            ? 'border-brandBrown ring-2 ring-brandBrown ring-opacity-50 scale-110' 
                            : 'border-gray-300 hover:border-brandBrown'
                        }`}
                        style={{ backgroundColor: color.hex }}
                        title={color.name}
                      />
                    ))}
                  </div>
                </div>

                {/* –ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞ */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                  <h3 className="text-lg font-semibold text-brandBrown mb-4 flex items-center gap-2">
                    <div 
                      className="w-4 h-4 rounded border border-gray-300"
                      style={{ backgroundColor: selectedColors.pillowRight }}
                    />
                    –ü—Ä–∞–≤–∞ –ø–æ–¥—É—à–∫–∞
                  </h3>
                  <div className="grid grid-cols-4 sm:grid-cols-5 gap-2">
                    {colors.map((color) => (
                      <button
                        key={`pillow-right-${color.hex}`}
                        onClick={() => handleColorChange('pillowRight', color.hex)}
                        className={`w-8 h-8 rounded-full border-2 transition-all duration-200 hover:scale-110 ${
                          selectedColors.pillowRight === color.hex 
                            ? 'border-brandBrown ring-2 ring-brandBrown ring-opacity-50 scale-110' 
                            : 'border-gray-300 hover:border-brandBrown'
                        }`}
                        style={{ backgroundColor: color.hex }}
                        title={color.name}
                      />
                    ))}
                  </div>
                </div>
              </div>

              {/* –®–≤–∏–¥–∫—ñ –¥—ñ—ó –¥–ª—è –ø–æ–¥—É—à–æ–∫ */}
              <div className="bg-gray-50 rounded-xl p-4">
                <div className="flex justify-center gap-4">
                  <button
                    onClick={() => setSelectedColors(prev => ({ ...prev, pillowRight: prev.pillowLeft }))}
                    className="px-4 py-2 bg-white hover:bg-gray-100 text-graphite rounded-lg transition-colors text-sm border"
                  >
                    –û–¥–Ω–∞–∫–æ–≤—ñ –ø–æ–¥—É—à–∫–∏
                  </button>
                  <button
                    onClick={() => {
                      const leftColor = selectedColors.pillowLeft;
                      const rightColor = selectedColors.pillowRight;
                      setSelectedColors(prev => ({ 
                        ...prev, 
                        pillowLeft: rightColor, 
                        pillowRight: leftColor 
                      }));
                    }}
                    className="px-4 py-2 bg-white hover:bg-gray-100 text-graphite rounded-lg transition-colors text-sm border"
                  >
                    –ü–æ–º—ñ–Ω—è—Ç–∏ –º—ñ—Å—Ü—è–º–∏
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
        <div className="max-w-4xl mx-auto mt-12 bg-white rounded-xl shadow-lg p-6 text-center">
          <h3 className="text-xl font-semibold text-brandBrown mb-4">
            üí° –ü–æ—Ä–∞–¥–∏ –≤—ñ–¥ MIVA
          </h3>
          <div className="grid md:grid-cols-2 gap-6 text-sm text-graphite">
            <div>
              <h4 className="font-medium mb-2">–ì–∞—Ä–º–æ–Ω—ñ–π–Ω—ñ –ø–æ—î–¥–Ω–∞–Ω–Ω—è:</h4>
              <p>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–ª—å–æ—Ä–∏ –∑ –æ–¥–Ω—ñ—î—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–æ—ó –≥–∞–º–∏ (—Ç–µ–ø–ª—ñ –∞–±–æ —Ö–æ–ª–æ–¥–Ω—ñ) –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–æ–∫—ñ–π–Ω–æ—ó –∞—Ç–º–æ—Å—Ñ–µ—Ä–∏.</p>
            </div>
            <div>
              <h4 className="font-medium mb-2">–ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ñ –∞–∫—Ü–µ–Ω—Ç–∏:</h4>
              <p>–î–æ–¥–∞–π—Ç–µ —è—Å–∫—Ä–∞–≤–æ—Å—Ç—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–∏—Ö –ø–æ–¥—É—à–æ–∫ - —Ü–µ –ª–µ–≥–∫–æ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π –∫—ñ–º–Ω–∞—Ç–∏.</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}